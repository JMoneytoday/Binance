# Opci√≥n 1 Sarvamos df1 en formato json 
#----------------------------------------------------------------------------#
import os # importamos la libriria del sistes operativo como os 

import pandas as pd # importamos la libria de pandas como pd 

import json # importamos la libreria json 

#----------------------------------------------------------------------------#
from binance.client import Client # importamos la clase cliente de Binance 
#---------------------------------------------------------------------------#

api_key = os.environ.get('binance_api')
api_secret = os.environ.get('binance_secret')

client = Client(api_key, api_secret)
btc_price = {'error':False}

#-------------------------------------------------------------------------------#

#valid intervals - 1m, 3m, 5m, 15m, 30m, 1h, 2h, 4h, 6h, 8h, 12h, 1d, 3d, 1w, 1M

timestamp = client._get_earliest_valid_timestamp('BTCUSDT', '1d') # Almacenamos la temporarida diaria en la variable timestamp

#-----------------------------------------------------------------#

data =  client.get_historical_klines('BTCUSDT', '1d', timestamp, limit=1000) # Guardatos los datos en la varible data

# se abre un archivo y se vuercan los datos utilizando json.dump

with open('BTCUSDT_1d.json', 'w') as e:
    json.dump(data, e)
df1 = pd.DataFrame(data, columns=['Open_Time','Open', 'High', 'Low','Close','Volume','Close_Time','Quote','Trades','Takers_buy_base','Takers_buy_quote','Ignore'])
df1['Open_Time'] = pd.to_datetime(df1['Open_Time'], unit='ms')# Covertimos la columna Open_Time en formato Fecha 
df1.to_json('BTCUSDT_1d.json') # Se guardan los datos en archivo JSON{}

df1.head()

