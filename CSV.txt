# option 2 - create a Pandas DataFrame and export to CSV
#---------------------------------------------------------------------------
import os # importamos la libriria del sistes operativo os 


import pandas as pd
from datetime import datetime

from binance.client import Client # importamos la clase cliente de Binance 

import csv

#-----------------------------------------------------------------------------
api_key = os.environ.get('binance_api')
api_secret = os.environ.get('binance_secret')

client = Client(api_key, api_secret)
btc_price = {'error':False}

#-------------------------------------------------------------------------------#

#valid intervals - 1m, 3m, 5m, 15m, 30m, 1h, 2h, 4h, 6h, 8h, 12h, 1d, 3d, 1w, 1M

timestamp = client._get_earliest_valid_timestamp('BTCUSDT', '1d')

#-----------------------------------------------------------------#

data =  client.get_historical_klines('BTCUSDT', '1d', timestamp, limit=1000)

df2 = pd.DataFrame(data,columns=['Open_Time','Open', 'High', 'Low','Close','Volume','Close_Time','Quote','Trades','Takers_buy_base','Takers_buy_quote','Ignore'])

df2['Open_Time'] = pd.to_datetime(df2['Open_Time'], unit='ms')

df2.to_csv('btc_1d.csv') # Podemos nombrar nuestro fichero, pero con terminaci√≥n .csv ejemplo:nombre_fichero.csv 


df2.head()
